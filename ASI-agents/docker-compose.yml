version: '3.8'

services:
  # üè• Medical Consultation System (Port 8000)
  medical-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-medical-system
    command: python -u medical/medical_system.py
    ports:
      - "8000:8000"
    environment:
      - AGENT_NAME=medical_system
      - AGENT_PORT=8000
      - AGENT_SEED=${MEDICAL_AGENT_SEED:-medical_agent_seed_ETHMem_2024}
      - MAILBOX_ENABLED=${MAILBOX_ENABLED:-false}
      - AGENT_MAILBOX_KEY=${MEDICAL_MAILBOX_KEY:-}
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - NETWORK=${NETWORK:-testnet}
      - ENDPOINT=http://0.0.0.0:8000/submit
      - ETHMem_CONTRACT_ADDRESS=${ETHMem_CONTRACT_ADDRESS:-}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./medical/user_memories.json:/app/medical/user_memories.json
      - medical-data:/app/data
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ‚öñÔ∏è Legal Consultation System (Port 9000)
  law-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-law-system
    command: python -u law/law_system.py
    ports:
      - "9000:9000"
    environment:
      - AGENT_NAME=law_system
      - AGENT_PORT=9000
      - AGENT_SEED=${LAW_AGENT_SEED:-law_agent_seed_ETHMem_2024}
      - MAILBOX_ENABLED=${MAILBOX_ENABLED:-false}
      - AGENT_MAILBOX_KEY=${LAW_MAILBOX_KEY:-}
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - NETWORK=${NETWORK:-testnet}
      - ENDPOINT=http://0.0.0.0:9000/submit
      - ETHMem_CONTRACT_ADDRESS=${ETHMem_CONTRACT_ADDRESS:-}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - law-data:/app/data
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:9000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üéß Customer Support System (Port 10000)
  support-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-support-system
    command: python -u customer-support/support_system.py
    ports:
      - "10000:10000"
    environment:
      - AGENT_NAME=support_system
      - AGENT_PORT=10000
      - AGENT_SEED=${SUPPORT_AGENT_SEED:-support_agent_seed_ETHMem_2024}
      - MAILBOX_ENABLED=${MAILBOX_ENABLED:-false}
      - AGENT_MAILBOX_KEY=${SUPPORT_MAILBOX_KEY:-}
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - NETWORK=${NETWORK:-testnet}
      - ENDPOINT=http://0.0.0.0:10000/submit
      - ETHMem_CONTRACT_ADDRESS=${ETHMem_CONTRACT_ADDRESS:-}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - support-data:/app/data
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:10000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üìö Education System (Port 11000)
  education-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-education-system
    command: python -u education/education_system.py
    ports:
      - "11000:11000"
    environment:
      - AGENT_NAME=education_system
      - AGENT_PORT=11000
      - AGENT_SEED=${EDUCATION_AGENT_SEED:-education_agent_seed_ETHMem_2024}
      - MAILBOX_ENABLED=${MAILBOX_ENABLED:-false}
      - AGENT_MAILBOX_KEY=${EDUCATION_MAILBOX_KEY:-}
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - NETWORK=${NETWORK:-testnet}
      - ENDPOINT=http://0.0.0.0:11000/submit
      - ETHMem_CONTRACT_ADDRESS=${ETHMem_CONTRACT_ADDRESS:-}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - education-data:/app/data
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:11000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üí∞ Financial Advisory System (Port 12000)
  financial-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-financial-system
    command: python -u financial/financial_system.py
    ports:
      - "12000:12000"
    environment:
      - AGENT_NAME=financial_system
      - AGENT_PORT=12000
      - AGENT_SEED=${FINANCIAL_AGENT_SEED:-financial_agent_seed_ETHMem_2024}
      - MAILBOX_ENABLED=${MAILBOX_ENABLED:-false}
      - AGENT_MAILBOX_KEY=${FINANCIAL_MAILBOX_KEY:-}
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - NETWORK=${NETWORK:-testnet}
      - ENDPOINT=http://0.0.0.0:12000/submit
      - ETHMem_CONTRACT_ADDRESS=${ETHMem_CONTRACT_ADDRESS:-}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL:-}
      - PRIVATE_KEY=${PRIVATE_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - financial-data:/app/data
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:12000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üöÄ API Server (Port 8080)
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asi-api-server
    command: python -u api_server.py
    ports:
      - "8080:8080"
    environment:
      - ASI_ONE_API_KEY=${ASI_ONE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./medical/user_memories.json:/app/medical/user_memories.json:ro
      - ./law:/app/law:ro
      - ./customer-support:/app/customer-support:ro
      - ./education:/app/education:ro
      - ./financial:/app/financial:ro
    networks:
      - asi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - medical-system
      - law-system
      - support-system
      - education-system
      - financial-system

  # üåê Frontend (Port 3002)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: asi-frontend
    ports:
      - "3002:3001"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080
      - NODE_ENV=production
    networks:
      - asi-network
    restart: unless-stopped
    depends_on:
      - api-server

networks:
  asi-network:
    driver: bridge
    name: asi-agents-network

volumes:
  medical-data:
    name: asi-medical-data
  law-data:
    name: asi-law-data
  support-data:
    name: asi-support-data
  education-data:
    name: asi-education-data
  financial-data:
    name: asi-financial-data
